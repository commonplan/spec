syntax = "proto3";

package io.substrait.extensions;

option java_multiple_files = true;
option csharp_namespace = "Substrait.Protobuf";

import "google/protobuf/any.proto";

message SimpleExtensionURI {
    // A surrogate key used in the context of a single plan used to reference the URI associated with an extension.
    uint32 extension_uri_surrogate_key = 1;

    // The URI where this extension YAML can be retrieved. This is the "namespace" of this extension.
    string uri = 2;
}


// Describes a mapping between a specific extension entity and the uri where that extension can be found.
message SimpleExtensionDefinition {

    oneof mapping_type {
        ExtensionType extension_type = 1;
        ExtensionTypeVariation extension_type_varition = 2;
        ExtensionFunction extension_function = 3;
    }

    // Describes a Type
    message ExtensionType {
        // references the surrogate key defined for a specific extension URI.
        uint32 extension_uri_pointer = 1;

        // A surrogate key used in the context of a single plan to reference a named type defined in that extension.
        uint32 type_surrogate_key = 2;

        // the name of the type in the defined extension YAML.
        string name = 3;
    }

    message ExtensionTypeVariation {
        // references the surrogate key defined for a specific extension URI.
        uint32 extension_uri_pointer = 1;

        // A surrogate key used in the context of a single plan to reference a named type variation defined in the referenced extension.
        uint32 type_surrogate_key = 2;

        // the name of the type in the defined extension YAML.
        string name = 3;
    }

    message ExtensionFunction {
        // references the surrogate key defined for a specific extension URI.
        uint32 extension_uri_pointer = 1;

        // A surrogate key used in the context of a single plan to reference a named type variation defined in the referenced extension.
        uint32 function_surrogate_key = 2;

        // A simple name if there is only one impl for the function within the YAML.
        // A compound name, referencing that includes type short names if there is more than one impl per name in the YAML.
        string name = 3;
    }

}

// A generic object that can be used to embed additional extension information into the serialized substrait plan.
message AdvancedExtension {

    // Optimizations are helpful information that don't influence semantics. May be ignored by a consumer.
    map<string, bytes> optimization_map = 1;
    google.protobuf.Any optimization_entity = 2;

    // Enhancements alter semantics. Cannot be ignored by a consumer.
    map<string, bytes> enhancement_map = 3;
    google.protobuf.Any enhancement_entity = 4;
}


